<html>
<head>
    <link rel="stylesheet" href="https://pages.nist.gov/nist-header-footer/css/nist-combined.css">
    <script src="https://pages.nist.gov/nist-header-footer/js/jquery-1.9.0.min.js" type="text/javascript" defer="defer"></script>
    <script src="https://pages.nist.gov/nist-header-footer/js/nist-header-footer.js" type="text/javascript" defer="defer"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Mark external (non-nist.gov) A tags with class "external"
            //If the adress start with https and ends with nist.gov
            var re_nist = new RegExp('^https?:\/\/((^\/)*\.)*nist\\.gov(\/|$)');
            //Regex to find address that start with https
            var re_absolute_address = new RegExp('^((https?:)?\/\/)');
            $("a").each(function () {
                var url = $(this).attr('href');
                if (re_nist.test(url) || !re_absolute_address.test(url)) {
                    $(this).addClass('local');
                } else {
                    $(this).addClass('external');
                }
            });
            // Add leaveNotice to external A elements
            $('a.external').leaveNotice({
                siteName: 'the NIST fork of the leaveNotice jQuery plugin',
            });
        });
    </script>

    <meta name="generator" content="HTML Tidy for Cygwin (vers 1st September 2004), see www.w3.org">
    <link rel="STYLESHEET" href="style.css" type="text/css">

    <title>SCATMECH: SphericalScatterer</title>
    <script async type="text/javascript" id="_fed_an_ua_tag" src="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=NIST&subagency=github&pua=UA-66610693-1&yt=true&exts=ppsx,pps,f90,sch,rtf,wrl,txz,m1v,xlsm,msi,xsd,f,tif,eps,mpg,xml,pl,xlt,c"></script>
</head>

<body><br>
  <a name="top" id="top"><!-- --></a>

  <table width="98%" border="0" cellpadding="0" cellspacing="0"
  align="center">
    <tr>
      <td>
        <p class="nav"><a href="index.htm">SCATMECH</a> &gt; <a href=
        "classes.htm">Classes and Functions</a> &gt;
        <a href="classes.htm#FSSM">Free-Space Scattering Models</a>
        &gt; SphericalScatterer</p>

        <h1>Abstract class SphericalScatterer</h1>

        <hr>

        <p>The abstract class <b>SphericalScatterer</b> represents a
        free space spherical scatterer. It provides additional
        functions, which are specific to spherical scatterers. It
        also provides functions for accessing the scattering,
        extinction, absorption, and backscattering cross sections
        and efficiencies.

        <h2>Parameters:</h2>

        <table border="1" cellpadding="5">
          <tr>
            <th>Parameter</th>
            <th>Data Type</th>
            <th>Description</th>
            <th>Default</th>
          </tr>

          <tr>
            <td class="parameter">lambda</td>
            <td class="datatype">double</td>
            <td class="description">Wavelength of the light
			           [&#181;m].<br>
				   (Inherited from <a href=
				    "freescat.htm">Free_Space_Scatterer</a>.)</td>
            <td class="default">0.532</td>
          </tr>

          <tr>
            <td class="parameter">medium</td>
            <td class="datatype"><a href="dielfunc.htm">dielectric_function</a></td>
            <td class="description">The
	                optical constants of the medium surrounding the sphere,
			expressed as a complex number (n,k) or, optionally, as
			a function of wavelength.<br>
			(Inherited from <a href=
			"freescat.htm">Free_Space_Scatterer</a>.)</td>
            <td class="default">(1,0)</td>
          </tr>

          <tr>
            <td class="parameter">sphere</td>
            <td class="datatype"><a href="dielfunc.htm">dielectric_function</a></td>
            <td class="description">The
	                optical constants of the sphere, expressed as a complex
			            number (n,k) or, optionally, as a function of
				                wavelength.</td>
            <td class="default">(1.59,0)</td>
          </tr>

          <tr>
            <td class="parameter">radius</td>
            <td class="datatype">double</td>
            <td class="description">Radius of
	                the sphere [&#181;m].</td>
            <td class="default">0.05</td>
          </tr>
        </table>

        <h2>See also:</h2> 
	<p><a href="index.htm">SCATMECH Home</a>,
        &nbsp; <a href="convent.htm">Conventions</a>, &nbsp;
        <a href="rayscat.htm">RayleighScatterer</a>, &nbsp;
        <a href="raygscat.htm">RayleighGansSphereScatterer</a>,
        &nbsp; <a href="miescat.htm">MieScatterer</a><br>

        <p>
	<a name="RefBohren" id="RefBohren"></a><a href="http://dx.doi.org/10.1002/9783527618156">C.F. Bohren and D.R. Huffman, <i>Absorption and Scattering of Light by Small Particles</i>, (Wiley, New York, 1983).</a><br>
        <a name="RefHulst" id="RefHulst"></a><a href="https://books.google.com/books?hl=en&lr=&id=PlHfPMVAFRcC&oi=fnd&pg=PA1&ots=Gg_gMuimH7&sig=gqf0sZ1ELYIDmyxa0vLzXIPcLWs">H.C. van de Hulst, <i>Light Scattering by Small Particles</i>, (Dover, New York, 1981).</a><br>

        <h2>Include file:</h2>

          <pre>
#include "<a href="../code/sphrscat.h">sphrscat.h</a>"
</pre>
        <h2>Source code:</h2>

          <pre>
<a href="../code/sphrscat.cpp">sphrscat.cpp</a>
<a href="../code/reg_sphrscat.cpp">reg_sphrscat.cpp</a>
</pre>
        <h2>Definition of public elements:</h2>

          <pre>
class SphericalScatterer : public <a href=
"freescat.htm">Free_Space_Scatterer</a> {
    <a href="#construct">SphericalScatterer</a>();

    virtual complex&lt;double&gt; <a href=
"#s1(double%20angle)">s1</a>(double angle,double lambda)=0;
    virtual complex&lt;double&gt; <a href=
"#s2(double%20angle)">s2</a>(double angle,double lambda)=0;

    JonesMatrix <a href=
"#s(double%20angle)">s</a>(double angle,double lambda);

    virtual double <a href="#cs">Csca</a>(double lambda)=0;
    virtual double <a href="#cs">Cext</a>(double lambda)=0;
    virtual double <a href="#cs">Cback</a>(double lambda)=0;
    double <a href="#cs">Cabs</a>(double lambda);

    double <a href="#eff">Qsca</a>(double lambda);
    double <a href="#eff">Qext</a>(double lambda);
    double <a href="#eff">Qback</a>(double lambda);
    double <a href="#eff">Qabs</a>(double lambda);
};

typedef <a href=
"modelptr.htm">Model_Ptr</a>&lt;SphericalScatterer&gt; <a href=
"#ptr">SphericalScatterer_Ptr</a>;
</pre>

        <hr>

        <h3><a name=
        "s1(double angle)" id="s1(double angle)">virtual
        complex&lt;double&gt; s1(double angle,double
        lambda)=0</a></h3>

        <blockquote><p>
          The scattering
          coefficient for electric fields out of the scattering
          plane. The parameter <b>angle</b> is the angle measured
          from the incident direction, and the parameter
          <b>lambda</b> is the wavelength. Since this is a virtual
          pure function, any class that inherits
          <b>SphericalScatterer</b> must define this
          function.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name=
        "s2(double angle)" id="s2(double angle)">virtual
        complex&lt;double&gt; s2(double angle,double
        lambda)=0</a></h3>

        <blockquote><p>
          The scattering coefficient for electric fields within the
          scattering plane. The parameter <b>angle</b> is the angle
          measured from the incident direction, and the parameter
          <b>lambda</b> is the wavelength. Since this is a virtual
          pure function, any class that inherits
          <b>SphericalScatterer</b> must define this function.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name=
        "s(double angle)" id="s(double angle)">JonesMatrix
        s(double angle,double lambda)</a></h3>

        <blockquote><p>
          A Jones matrix representation of the scattering matrix.
          The parameter <b>angle</b> is the angle measured from the
          incident direction, and the parameter <b>lambda</b> is
          the wavelength.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a>.</p>

	<h3><a name="cs" id=
        "cs">virtual double Csca(double lambda)=0<br>
        virtual double Cext(double lambda)=0<br>
        virtual double Cback(double lambda)=0<br>
        double Cabs(double lambda)</a></h3>

        <blockquote><p>
          Functions that return the scattering, extinction, radar
          backscattering, and absorption cross sections,
          respectively. The first three are virtual pure functions
          that must be defined by any inherited model. The latter
          is defined as <b>Cext()-Csca()</b>.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="eff" id=
        "eff">double Qsca(double lambda)<br>
        double Qext(double lambda)<br>
        double Qback(double lambda)<br>
        double Qabs(double lambda)</a></h3>

        <blockquote><p>
          Functions that return the scattering, extinction, radar
          backscattering, and absorption efficiencies,
          respectively.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="ptr" id=
        "ptr">typedef Model_Ptr&lt;SphericalScatterer&gt;
        SphericalScatterer_Ptr</a></h3>

        <blockquote>
          <p>The typedef <b>SphericalScatterer_Ptr</b> behaves like a
          pointer to an instance of class
          <b>SphericalScatterer</b>. The following statement will
          query the user for an instance of class
          <b>SphericalScatterer</b>:

          <pre>
SphericalScatterer_Ptr model = Get_Model_Ptr();
</pre>

          <p>The next
          statement will also create an instance of class
          <b>SphericalScatterer</b>:

          <pre>
SphericalScatterer_Ptr model = "MieScatterer";
</pre>

          <p>See <a href=
          "modelptr.htm">Model_Ptr&lt;model&gt;</a>.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>
<!-- START FOOTER -->
<hr>
<h2>For More Information</h2>

<p>
<a href="https://www.nist.gov/people/thomas-germer">SCATMECH Technical Information and Questions</a><br>
<a href="http://www.nist.gov/pml/div685/index.cfm" target="_top">Sensor Science Division Home Page</a><br>
<a href="mailto:fraser@nist.gov">Sensor Science Division Inquiries</a><br>
<a href="mailto:thomas.germer@nist.gov">Website Comments</a>

<p>
Current SCATMECH version: <a href="./download.htm">7.22 (April 2021)</a><br>
<br>

</td>
</tr>
</table>

</body>
</html>
