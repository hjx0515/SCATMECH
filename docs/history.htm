<html>
<head>
    <link rel="stylesheet" href="https://pages.nist.gov/nist-header-footer/css/nist-combined.css">
    <script src="https://pages.nist.gov/nist-header-footer/js/jquery-1.9.0.min.js" type="text/javascript" defer="defer"></script>
    <script src="https://pages.nist.gov/nist-header-footer/js/nist-header-footer.js" type="text/javascript" defer="defer"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Mark external (non-nist.gov) A tags with class "external"
            //If the adress start with https and ends with nist.gov
            var re_nist = new RegExp('^https?:\/\/((^\/)*\.)*nist\\.gov(\/|$)');
            //Regex to find address that start with https
            var re_absolute_address = new RegExp('^((https?:)?\/\/)');
            $("a").each(function () {
                var url = $(this).attr('href');
                if (re_nist.test(url) || !re_absolute_address.test(url)) {
                    $(this).addClass('local');
                } else {
                    $(this).addClass('external');
                }
            });
            // Add leaveNotice to external A elements
            $('a.external').leaveNotice({
                siteName: 'the NIST fork of the leaveNotice jQuery plugin',
            });
        });
    </script>

    <meta name="generator" content="HTML Tidy for Cygwin (vers 1st September 2004), see www.w3.org">
    <link rel="STYLESHEET" href="style.css" type="text/css">

    <title>SCATMECH: Version History</title>
    <script async type="text/javascript" id="_fed_an_ua_tag" src="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=NIST&subagency=github&pua=UA-66610693-1&yt=true&exts=ppsx,pps,f90,sch,rtf,wrl,txz,m1v,xlsm,msi,xsd,f,tif,eps,mpg,xml,pl,xlt,c"></script>
</head>

<body>
    <br>
    <table width="98%" border="0" cellpadding="0" cellspacing="0" align="center">
        <tr>
            <td>
                <p class="nav">
                    <a href="index.htm">SCATMECH</a> &gt; Version History
                    <h1><a name="top" id="top">Version History</a></h1>

                    <hr>

                    <ul>
                        <li><a href="#v7.22">Version 7.22</a> (April 2020)</li>
                        <li><a href="#v7.21">Version 7.21</a> (February 2019)</li>
                        <li><a href="#v7.20">Version 7.20</a> (May 2018)</li>
                        <li><a href="#v7.10">Version 7.10</a> (October 2017)</li>
                        <li><a href="#v7.01">Version 7.01</a> (September 2017)</li>
                        <li><a href="#v7.00">Version 7.00</a> (January 2015)</li>
                        <li><a href="#v6.01u">Editorial Update</a> (September 2012)</li>
                        <li><a href="#v6.01">Version 6.01</a> (May 2008)</li>
                        <li><a href="#v6.00">Version 6.00</a> (February 2008)</li>
                        <li><a href="#v5.03">Version 5.03</a> (August 2006)</li>
                        <li><a href="#v5.02">Version 5.02</a> (July 2006)</li>
                        <li><a href="#v5.01">Version 5.01</a> (October 2005)</li>
                        <li><a href="#v5.00">Version 5.00</a> (July 2005)</li>
                        <li><a href="#v4.01">Version 4.01</a> (June 2004)</li>
                        <li><a href="#v4.00">Version 4.00</a> (July 2003)</li>
                        <li><a href="#v3.01">Version 3.01</a> (May 2002)</li>
                        <li><a href="#v3.00">Version 3.00</a> (December 2001)</li>
                        <li><a href="#v2.00">Version 2.00</a> (March 2001)</li>
                        <li><a href="#v1.01">Version 1.01</a> (July 2000)</li>
                        <li>Version 1.00 (March 2000)</li>
                    </ul>
                    <a name="v7.22" id="v7.22"><!-- --></a>
                    <h2>Version 7.22 (April 2021)</h2> 

                    <p>Modified <a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a>, <a href="subbobvlieg.htm">Subsurface_Bobbert_Vlieger_BRDF_Model</a>,
                    <a href="axipart.htm">Axisymmetric_Particle_BRDF_Model</a>, and <a href="subaxipart.htm">Subsurface_Axisymmetric_Particle_BRDF_Model</a> by 
                    removing the functions <b>PartialExtinctionS(double theta)</b> and <b>PartialExtinctionP(double theta)</b> (which provided a partial extinction coefficient) and 
                    replaced them with a single function <b>Specular(double theta)</b> that returns the Mueller matrix specular reflectance or regular transmittance, calculated 
                    using the optical theorem.
                    </p>

                    <p>Repaired errors in <a href="muellermatrix.htm#valid()">MuellerMatrix::valid()</a> and <a href="muellermatrix.htm#valid()">MuellerMatrix::physically_valid()</a>.</p>

                    <a name="v7.21" id="v7.21"><!-- --></a>
                    <h2>Version 7.21 (February 2019)</h2>

                    <p>Modified <a href="polydisperse.htm">Polydisperse_Sphere_BRDF_Model</a> to add a parameter <b>fractional_coverage</b> that, if
                    non-zero, renormalizes the distribution to a given fractional coverage of spheres on the surface. </p>

                    <p>Modified <a href="sizedistribution.htm#CC1246ESurfaceParticleSizeDistribution">CC1246E_SurfaceParticleSizeDistribution</a> so 
                    that, the distribution is renormalized to the same fractional coverage of spheres on the surface (with sizes from 1&nbsp;&micro;m to 
                    1000&nbsp;&micro;m) as when <b>slope</b> = 0.926 with the given value of <b>cleanliness</b>.</p>

                    <a name="v7.20" id="v7.20"><!-- --></a>
                    <h2>Version 7.20 (May 2018)</h2>

                    <p>Added the model <a href="polydisperse.htm">Polydisperse_Sphere_BRDF_Model</a>, which uses 
                        <a href="sphrpart.htm">Double_Interaction_BRDF_Model</a> with <a href="miescat.htm">MieScatterer</a>
                        and with a diameter distribution given by <a href="sizedistribution.htm">SurfaceParticleSizeDistribution</a>. 
                       This model is useful for estimating scatter from contaminated surfaces.</p>
                <p></p>
                <p>The code for <a href="crossrcwmodel.htm">CrossRCW_Model</a> can now accept anisotropic and magnetic media.

                <p>
                    Added <a href="crossgrating.htm#Rectangular_CrossGrating">Rectangular_CrossGrating</a> to the list of classes inheriting
                    <a href="crossgrating.htm">CrossGrating</a>.

                <p>Models for size distributions were added:</p>
                <ul>
                    <li><a href="sizedistribution.htm">Abstract class Distribution</a></li>
                    <ul>
                        <li><a href="#LogNormalDistribution">Log_Normal_Distribution</a></li>
                        <li><a href="#ModifiedGammaDistribution">Modified_Gamma_Distribution</a></li>
                        <li><a href="#NormalDistribution">Normal_Distribution</a></li>
                        <li><a href="#WeibullDistribution">Weibull_Distribution</a></li>
                        <li><a href="#BimodalDistribution">Bimodal_Distribution</a></li>
                    </ul>
                    <li><a href="sizedistribution.htm">Abstract class VolumeParticleSizeDistribution</a></li>
                    <ul>
                        <li><a href="sizedistribution.htm#RegularVolumeParticleSizeDistribution">class Regular_VolumeParticleSizeDistribution</a></li>
                    </ul>
                    <li><a href="sizedistribution.htm">Abstract class SurfaceParticleSizeDistribution</a></li>
                    <ul>
                        <li><a href="sizedistribution.htm#RegularSurfaceParticleSizeDistribution">class Regular_SurfaceParticleSizeDistribution</a></li>
                        <li><a href="sizedistribution.htm#CC1246ESurfaceParticleSizeDistribution">class CC1246E_SurfaceParticleSizeDistribution</a></li>
                    </ul>
                </ul>

                <p>Models for polarized phase functions were added:</p>
                <ul>
                    <li><a href="polphase.htm">Abstract class Polarized_Phase_Function</a></li>
                    <li><a href="polphase.htm#UnpolarizedPhaseFunction">class Unpolarized_Phase_Function</a></li>
                    <li><a href="polphase.htm#CodeWhitneyPhaseFunction">class CodeWhitney_Phase_Function</a></li>
                    <li><a href="polphase.htm#ConstrainedPhaseFunction">class Constrained_Phase_Function</a></li>
                    <li><a href="polphase.htm#SphericalScattererPhaseFunction">class SphericalScatterer_Phase_Function</a></li>
                    <li><a href="polphase.htm#DistributediePhaseFunction">class Distributed_Mie_Phase_Function</a></li>
                </ul>

                <p>
                    Updated <a href="firstdiffuse.htm">First_Diffuse_BRDF_Model</a> to use <a href="polphase.htm">Polarized_Phase_Function</a>. Before, it
                    assumed a Rayleigh-Gans-like polarization dependence to the phase function.

                    <a name="v7.10" id="v7.10"><!-- --></a>
                    <h2>Version 7.22 (April 2021)</h2>

                    The model <a href="./zernikeexpansion.htm">ZernikeExpansion_BRDF_Model</a> was added.

                    <a name="v7.01" id="v7.01"><!-- --></a>
                    <h2>Version 7.01 (September 2017)</h2>


                <p>
                    Abstract class <a href="stackmodel.htm">StackModel</a> was created to give
                    <a href="dielstack.htm">dielectric_stack</a> the properties of a <a href="model.htm">Model</a>. Specific classes
                    <a href="stackmodel.htm#No_StackModel">No_StackModel</a>, <a href="stackmodel.htm#Stack_StackModel">Stack_StackModel</a>, <a href="stackmodel.htm#SingleFilm_StackModel">SingleFilm_StackModel</a>,
                    <a href="stackmodel.htm#DoubleFilm_StackModel">DoubleFilm_StackModel</a>, and <a href="stackmodel.htm#GradedFilm_StackModel">GradedFilm_StackModel</a> implement specific film stack models. These
                    models inherit <a href="model.htm">Model</a>, so they make it easier to
                    parametrically vary parameters associated with a film
                    stack. All scattering models that allowed for a <a href="dielstack.htm">dielectric_stack</a> have been upgraded to use <a href="stackmodel.htm">StackModel</a> instead.
                </p>

                <p>Added <a href="phase.htm">Legendre_Phase_Function</a> to the list of classes inheriting <a href="phase.htm">Phase_Function</a>.</p>

                <p>Corrected some errors in the thread safety using mutexes.</p>

                <p>Corrected some errors in coordinate systems for polarization in <a href="BRDF_Model.htm">BRDF_Model</a>.</p>

                <a name="v7.00" id="v7.00"><!-- --></a>
                <h2>Version 7.00 (January 2015)</h2>

                <p>
                    An inconsistent use of the polarization basis set was found for <a href="tscat.htm">TMatrix_Axisymmetric_Scatterer</a>.  This causes a problem when using <a href="sphrpart.htm">Double_Interaction_BRDF_Model</a> with this
                    class and when evaluating the scatter out of the plane of incidence.  This issue has been corrected.
                </p>

                <p>Added the class <a href="oasphere.htm">Optically_Active_Sphere_Scatterer</a>, which implements the Mie scattering solution for homogeneous sphere consisting of an optically active material.</p>

                <p>
                    Modified the codes for spherical Bessel functions to use the continued fraction method found in W.L. Lentz, "Generating Bessel function in Mie scattering
                    calculations using continued fractions," Appl. Opt. 15, 668 (1978).  These values improved the stability of some of the Mie calculations.
                </p>


                <p>Added <b>type=2</b> and <b>type=3</b> codes to <a href="transmit.htm">Transmit_BRDF_Model</a>.</p>

                <p>
                    Modified <a href="./reflectance.htm#KM">Kubelka_Munk_Reflectance</a> by changing the data type for absorption and scattering coeffients to <a href="./scattabl.htm">Table</a> and renaming the
                    absorption coefficient from <tt>absorbance</tt> to <tt>absorption</tt>.
                </p>

                <p>
                    Added functionality for two more modes
                    in <a href="BRDF_Model.htm">BRDF_Model</a>, where the light
                    is assumed to be incident upon the surface from the
                    substrate, rather than from the air.
                    When <a href="BRDF_Model.htm">BRDF_Model</a>::type==0, light
                    is incident from the ambient (air or vacuum) and the
                    scattering is evaluated in reflection.
                    When <a href="BRDF_Model.htm">BRDF_Model</a>::type==1, light
                    is incident from the ambient (air or vacuum) and the
                    scattering is evaluated in transmission (into the substrate,
                    which must be non-absorbing).
                    When <a href="BRDF_Model.htm">BRDF_Model</a>::type==2, light
                    is incident from the substrate (which must be
                    non-absorbing), and scattering is evaluated in
                    reflection. Finally,
                    When <a href="BRDF_Model.htm">BRDF_Model</a>::type==3, light
                    is incident from the substrate (which must be
                    non-absorbing), and the scattering is evaluated in
                    transmission (towards the ambient). Not all models support
                    all the modes. The following models now have all four modes:
                </p>


                <ul>
                    <li><a href="microroughbrdf.htm">Microroughness_BRDF_Model</a></li>
                    <li><a href="roughnes.htm">Roughness_Stack_BRDF_Model</a></li>
                    <li><a href="corrough.htm">Correlated_Roughness_BRDF_Model</a></li>
                    <li><a href="twoface.htm">Two_Face_BRDF_Model</a></li>
                    <li><a href="correlated_stack.htm">Correlated_Stack_BRDF_Model</a></li>
                    <li><a href="raystack.htm">Rayleigh_Stack_BRDF_Model</a></li>
                    <li><a href="raydef.htm">Rayleigh_Defect_BRDF_Model</a></li>
                    <li><a href="uncorrelated_stack.htm">Uncorrelated_Stack_BRDF_Model</a></li>
                    <li><a href="growth_stack.htm">Growth_Roughness_Stack_BRDF_Model</a></li>
                    <li><a href="facet.htm">Facet_BRDF_Model</a></li>
                    <li><a href="torrspar.htm">Shadowed_Facet_BRDF_Model</a></li>
                    <li><a href="lambert.htm">Lambertian_BRDF_Model</a></li>
                    <li><a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a></li>
                    <li><a href="axipart.htm">Axisymmetric_Particle_BRDF_Model</a></li>
                    <li><a href="subbobvlieg.htm">Subsurface_Bobbert_Vlieger_BRDF_Model</a></li>
                    <li><a href="subaxipart.htm">Subsurface_Axisymmetric_Particle_BRDF_Model</a></li>
                    <li><a href="subsphere.htm">Subsurface_Sphere_BRDF_Model</a></li>
                    <li><a href="sphrscat.htm">Double_Interaction_BRDF_Model</a></li>
                    <li><a href="finiteaperture.htm">Finite_Aperture_BRDF_Model</a> (transfers property to specific model)</li>
                    <li><a href="focussedbeam.htm">Focussed_Beam_BRDF_Model</a> (transfers property to specific model)</li>
                    <li><a href="two_source.htm">Two_Source_BRDF_Model</a> (transfers property to specific models)</li>
                    <li><a href="three_source.htm">Three_Source_BRDF_Model</a> (transfers property to specific models)</li>
                    <li><a href="four_source.htm">Four_Source_BRDF_Model</a> (transfers property to specific models)</li>
                    <li><a href="transmit.htm">Transmit_BRDF_Model</a> (transfers property to specific model)</li>
                    <li><a href="rcwbrdf.htm">RCW_BRDF_Model</a></li>
                    <li><a href="crossrcwbrdf.htm">CrossRCW_BRDF_Model</a></li>
                </ul>

                <p>
                    Added <a href="subbobvlieg.htm">Subsurface_Bobbert_Vlieger_BRDF_Model</a> and <a href="subaxipart.htm">Subsurface_Axisymmetric_Particle_BRDF_Model</a>, which implement
                    <a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a> and <a href="axipart.htm">Axisymmetric_Particle_BRDF_Model</a>, respectively, as subsurface geometries.
                </p>


                <p>
                    Added models <a href="three_source.htm">Three_Source_BRDF_Model</a> and <a href="four_source.htm">Four_Source_BRDF_Model</a>, which allow
                    one to easily evaluate the sum of the BRDF for three or four models, respectively. In the past, one could daisy chain <a href="two_source.htm">Two_Source_BRDF_Model</a>, but
                    that was fairly clumsy.
                </p>

                <p>
                    A new model, <a href="raystack.htm">Rayleigh_Stack_BRDF_Model</a> was added that calculates the scattering of a small sphere anywhere
                    in, above, or below a film stack.
                </p>
                <p>
                    A new model, <a href="growth_stack.htm">Growth_Roughness_Stack_BRDF_Model</a> was added that calculates the scattering from a stack of
                    films, the roughnesses of which are determined by a linear growth model.
                </p>

                <p>
                    The code for <a href="rcwmodel.htm">RCW_Model</a> was extended to allow for diagonally anisotropic and
                    magnetic media in all cases (in-plane and conical geometries). Gratings are defined using the <a href="grating.htm">Grating</a> class.
                </p>

                <p>
                    The parameter <b>oldmethod</b> was removed from <a href="rcwbrdf.htm">RCW_BRDF_Model</a> and <a href="rcwmodel.htm">RCW_Model</a>.  This parameter used to
                    disable the proper Fourier factorization.</>

                <p>Added intensity scaling factors (<b>factor1</b> and <b>factor2</b>) for the two different models in <a href="two_source.htm">Two_Source_BRDF_Model</a>.</p>

                <p>
                    A number of changes have been made to <a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a>:
                    <ul>
                        <li>
                            Any number of coatings are allowed on the sphere (in addition to any number of coatings on the substrate). As
                            a result of this change, the parameters <b>n3</b> and <b>d</b> were removed and replaced with <a href="dielstack.htm">dielectric_stack</a> <b>spherecoat</b>.
                        </li>

                        <li>
                            Code for transmission (from vacuum to substrate), back-transmission (from the substrate to the vacuum), and back-reflection (from the substrate reflected back
                            to the substrate) has been added.
                        </li>
                    </ul>

                <p>
                    The new class <a href="multilayermie.htm">MultilayerCoatedMieScatterer</a> was added. This class provides a solution to
                    the scattering by a sphere with an arbitrary number of coatings.

                <p>
                    Extended <a href="focussedbeam.htm">Focussed_Beam_Instrument_BRDF_Model</a>
                    and <a href="finiteaperture.htm">Finite_Aperture_Instrument_BRDF_Model</a>
                    to allow different orders of integration, from 1 to 7.

                <p>
                    Added <a href="crossrcwmodel.htm">CrossRCW_Model</a> which implements rigorous coupled wave (RCW)
                    theory to crossed gratings.  The gratings are defined by a class <a href="crossgrating.htm">CrossGrating</a>, and
                    the RCW results are accessible through a BRDF model using   <a href="crossrcwbrdf.htm">CrossRCW_BRDF_Model</a>.

                <p>
                    Added functions for performing complex fast Fourier
                    transforms (FFT) with arbitrary number of points. These
                    functions are documented in the source code (<a href="../code/fft.h">fft.h</a> and <a href="../code/fft.cpp">fft.cpp</a>).

                <p>
                    Added functions and classes for creating random numbers
                    with different distributions, multivariate random numbers,
                    and self-affine random curves.  These functions and
                    classes are documented in the source code (<a href="../code/random.h">random.h</a> and <a href="../code/random.cpp">random.cpp</a>).

                <p>
                    Restructured
                    how <a href="grating.htm">Grating</a> works. Formerly,
                    each child class was required to define several virtual
                    functions, providing the Fourier factorization of each
                    layer in the grating.  This mode of operation was fine for
                    RCW, but was difficult to handle if a spatial
                    representation of the dielectric function was needed.
                    Therefore, the new mode of operation is that each child
                    class should, in setup(), fill vectors containing the dielectric
                    functions, the location of transitions, and the
                    thicknesses of the layers. The old method can still be
                    used by overridering fourierx(...). A new volume grating
                    <a href="grating.htm#volume">Sinusoidal_Volume_Grating</a>, for example, uses
                    the old method of directly providing the fourier expansions.

                <p>
                    <a href="muellermatrix.htm">MuellerMatrix</a> and <a href="stokesvector.htm">StokesVector</a>
                    now have member functions <tt>valid()</tt> which return <tt>true</tt> if the matrix or vector
                    is a mapping from a Stokes space to itself and <tt>false</tt> if it is not. <a href="muellermatrix.htm">MuellerMatrix</a> also has a member
                    function <tt>physically_valid</tt>, which is a more stringent test, in which a Mueller matrix must be a convex sum of
                    Jones-Mueller matrices to be physically valid.

                <p>
                    <a href="scattabl.htm">Table</a> has been signficantly reworked to allow more general functional behavior.
                    Documentation for <a href="scattabl.htm">Table</a> describes the different formats allowed. Note that <a href="dielfunc.htm">dielectric_function</a> uses
                    <a href="scattabl.htm">Table</a>, so that these changes affect that class as well. The new features include:
                    <ul>
                        <li>
                            Tabulated data interpolation was enhanced to allow for linear (as before) or logarithmic
                            (new) interpolation on the x and/or y axes, as well as spline and log-spline on the y axis.
                            There are two subparameters to a Table, <tt>interpolationx</tt> and <tt>interpolationy</tt>,
                            which can each be either <tt>lin</tt>, <tt>log</tt>, <tt>spline</tt>, or <tt>logspline</tt>.
                        </li>
                        <li>A new file format was added to allow for functional definitions.</li>
                        <li>An inline function format was added.</li>
                    </ul>

                <p><a href="rcwmodel.htm">RCW_BRDF_Model</a> did not work in transmission mode under many conditions.  The error was fixed.

                <p>
                    An error was found in <a href="../code/focussedbeam.cpp">focussedbeam.cpp</a> that caused <a href="focussedbeam.htm">Focussed_Beam_Instrument_BRDF_Model</a> to
                    not work for non-zero sample rotation.  The error was fixed.

                <p>The Frames Based User Interface is no longer supported.</p>

                <a name="v6.01u"><!-- --></a>
                <h2>Editorial Update (September 2012)</h2>
                <p>
                    The functionality of Version 6.01 remains the same, however minor editorial updates have been made. As a result, a new downloadable ".zip" file is now available.

                    <a name="v6.01" id="v6.01"><!-- --></a>
                    <h2>Version 6.01 (May 2008)</h2>

                <p>
                    An error was found in <a href="../code/grating.cpp">grating.cpp</a> for <a href="grating.htm">Generic_Grating</a> which
                    caused an exception to be thrown under rare conditions indicating the grating was invalid. The error was fixed.

                <p>
                    An <tt>#include &lt;vector&gt;</tt> was added to <a href="../code/matrixmath.h">matrixmath.h</a>
                    to allow some routines to compile properly.

                    <a name="v6.00" id="v6.00"><!-- --></a>
                    <h2>Version 6.00 (February 2008)</h2>

                <p>
                    An abstract class <a href="reflectance.htm">Reflectance</a> was created to handle the
                    wavelength dependence of a diffuse scatterer.  <a href="reflectance.htm">Reflectance</a> is
                    used by <a href="lambert.htm">Lambertian_BRDF_Model</a> and <a href="diffuse.htm">Diffuse_Subsurface_BRDF_Model</a>, where
                    beforehand the reflectance was described by a <a href="scattabl.htm">Table</a>.  Three different instantiable classes
                    inherit the properties of <a href="reflectance.htm">Reflectance</a>:
                    <ul>
                        <li><a href="reflectance.htm#Table">Table_Reflectance</a> -- Reflectance given by a <a href="scattabl.htm">Table</a>.
                        <li><a href="reflectance.htm#Eqn">Equation_Reflectance</a> -- Reflectance given by an expression (using the class <b>Evaluator</b>).
                        <li><a href="reflectance.htm#KM">Kubelka_Munk_Reflectance</a> -- Reflectance given by the Kubelka-Munk model for diffuse scattering.
                    </ul>

                <p>
                    Support for rigorous coupled-wave (RCW) calculations for
                    diffraction from gratings was added to the library. The
                    following classes were added:
                </p>

                <ul>
                    <li><a href="rcwmodel.htm">RCW_Model</a> - Performs the RCW calculation.</li>

                    <li>
                        <a href="grating.htm">Grating</a> - Abstract class for
                        describing gratings.

                        <ul>
                            <li>
                                <a href="grating.htm#sinusoid">Sinusoidal_Grating</a> - A
                                grating with a sinusoidal profile.
                            </li>

                            <li>
                                <a href="grating.htm#triangle">Triangular_Grating</a> - A
                                grating with a triangular profile.
                            </li>

                            <li>
                                <a href="grating.htm#corner">Corner_Rounded_Grating</a> - A
                                grating with a rectangular profile, with corner
                                rounding.
                            </li>

                            <li>
                                <a href="grating.htm#single">Single_Line_Grating</a> - A
                                grating with a trapezoidal profile.
                            </li>

                            <li>
                                <a href="grating.htm#file">Generic_Grating</a> - An
                                arbitrary grating described in a file.
                            </li>
                        </ul>
                    </li>

                    <li>
                        <a href="rcwbrdf.htm">RCW_BRDF_Model</a> - Allows
                        grating calculations to be accessed as a <a href="BRDF_Model.htm">BRDF_Model</a>.
                    </li>
                </ul>

                <p>
                    File access was improved by introduction of classes <b>streambuf_with_comments</b>, <b>ifstream_with_comments</b>, and
                    <b>istream_with_comments</b> so that input files can have comments and redirection. These classes are documented in the
                    header file <a href="../code/scatmech.h">scatmech.h</a>. These classes are used by the standard input functions, <a href="dielstack.htm">dielectric_stack</a>,
                    <a href="grating.htm#file">Generic_Grating</a>, <a href="dielfunc.htm">dielectric_function</a>, and <a href="scattabl.htm">Table</a>.
                </p>

                <p>
                    A class <b>Evaluator</b> was introduced for evaluating arithmetic expressions. It is documented in header file
                    <a href="../code/scateval.h">scateval.h</a> and source file <a href="../code/scateval.cpp">scateval.cpp</a>.
                </p>

                <p><a href="#top"><span class="totop">Return to top</span></a></p>

                <a name="v5.03" id="v5.03"><!-- --></a>
                <h2>Version 5.03 (August 2006)</h2>

                <p>
                    An error was found in <a href="miescat.htm">MieScatterer</a> that affected the results
                    for the <a href="sphrscat.htm#cs">cross section</a> and
                    <a href="sphrscat.htm#eff">efficiency</a> functions, under
                    certain conditions.
                </p>


                <p><a href="#top"><span class="totop">Return to top</span></a></p>

                <a name="v5.02" id="v5.02"><!-- --></a>
                <h2>Version 5.02 (July 2006)</h2>

                <p>
                    New functions (e.g., <a href="dielstack.htm#rp12i">r<i>xnn</i>i(...)</a> and <a href="dielstack.htm#JMri">r<i>nn</i>i(...)</a>) were added to
                    <a href="dielstack.htm">dielectric_stack</a> which return
                    reflection and transmission coefficients as functions of
                    internal incident angle, as opposed to vacuum angles.
                </p>

                <p>
                    Fixed an error in <a href="../code/inherit.cpp">
                        Model::set_parameter(const
                        std::string&amp; parameter, const COMPLEX&amp;
                        value)
                    </a>.
                </p>

                <p>
                    Modified <a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a> so that it
                    can accept any stack of films on the substrate. This
                    required changing the names of some of the parameters,
                    since n1 was the original film dielectric function. Also
                    removed code and options for saving the A-matrix, since it
                    was incompatible with the new film stack code.
                </p>

                <p>
                    An error was found and fixed in the reading of
                    dielectric stacks by Model::AskUser().
                </p>

                <p><a href="#top"><span class="totop">Return to top</span></a></p>

                <a name="v5.01" id="v5.01"><!-- --></a>
                <h2>Version 5.01 (October 2005)</h2>

                <p>
                    An error was found and fixed in the evaluation of
                    <a href="psd.htm">Elliptical_Mesa_PSD_Function</a>.
                </p>

                <p><a href="#top"><span class="totop">Return to top</span></a></p>

                <a name="v5.00" id="v5.00"><!-- --></a><h2>Version 5.00 (July 2005)</h2>

                <p>
                    The class <a href="BRDF_Model.htm">BRDF_Model</a>
                    requires virtual member functions jones() or mueller(). In
                    past versions, these were functions of the direction,
                    defined by thetai, thetas, and phis. In Version 5.00, these
                    function have no arguments, but the variables thetai,
                    thetas, phis, and rotation are defined before these
                    functions are called.
                </p>

                <p>Enhanced the following models:</p>

                <ul>
                    <li>
                        <a href="subsphere.htm">Subsurface_Particle_BRDF_Model</a>
                        (formerly Subsurface_Sphere_BRDF_Model) by providing
                        support for any <a href="freescat.htm">Free_Space_Scatterer</a>.
                    </li>

                    <li>
                        <a href="sphrpart.htm">Double_Interaction_BRDF_Model</a> by
                        providing support for any <a href="freescat.htm">Free_Space_Scatterer</a>.
                    </li>

                    <li>
                        All models inheriting <a href="roughbrdf.htm">Roughness_BRDF_Model</a>, by providing support for
                        anisotropic surfaces.
                    </li>

                    <li>
                        All models inheriting <a href="facet.htm">Facet_BRDF_Model</a>, by providing support for
                        anisotropic surfaces.
                    </li>

                    <li>
                        <a href="psd.htm">PSD_Function</a>, by providing support and
                        models for anisotropic surfaces.
                    </li>

                    <li>
                        <a href="sdf.htm">Slope_Distribution_Function</a>, by
                        providing support and models for anisotropic
                        surfaces.
                    </li>
                </ul>

                <p>Added Free Space Scatterers:</p>

                <ul>
                    <li>
                        <a href="freescat.htm">Free_Space_Scatterer</a>,
                        which is now the base class for <a href="sphrscat.htm">SphericalScatterer</a>.
                    </li>

                    <li>
                        <a href="tscat.htm">TMatrix_Axisymmetric_Scatterer</a>
                    </li>
                </ul>

                <p>Added new BRDF models:</p>

                <ul>
                    <li>
                        <a href="axipart.htm">Axisymmetric_Particle_BRDF_Model</a>
                    </li>

                    <li><a href="transmit.htm">Transmit_BRDF_Model</a></li>
                </ul>

                <p>
                    <a href="freescat.htm">Free_Space_Scatterer</a> now has
                    lambda as a true parameter.
                </p>

                <p>
                    <a href="BRDF_Model.htm">BRDF_Model</a> now has a
                    parameter rotation, which serves to rotate the sample about
                    the surface normal.
                </p>

                <p>
                    Upgraded the run-time mechanism for the library. The
                    changes simplify the administration of most classes
                    inheriting <a href="model.htm">Model</a>. All models now
                    define parameters using the DECLARE_PARAMETER(type,name)
                    macro in the class declaration, and use the
                    DEFINE_PARAMETER(class,type,name,descritpion,default) to
                    define the variable instance. A number of functions are
                    provided (see <a href="../code/inherit.h">inherit.h</a>)
                    that enable a program to obtain a list of model inheriting
                    another model, a list of parameters for any model, and
                    information about those parameters. Model initialization is
                    now automated, circumventing the need for each model to
                    define a constructor or destructor. Lastly, the
                    set_parameter(name,value) function is automated, so that
                    this function need not be defined for every model.
                </p>

                <p>
                    Fixed a problem with the polar function for Vector3D,
                    found for the .net version of Visual C++.
                </p>

                <p>
                    Fixed an error in MuellerPartialLinearPolarizer, which
                    caused it to yield incorrect results.
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>

                <a name="v4.01" id="v4.01"><!-- --></a>
                <h2>Version 4.01 (June 2004)</h2>

                <p>
                    Fixed an error in Finite_Aperture_BRDF_Model, which
                    caused it to yield incorrect results in out of plane
                    geometries.
                </p>

                <p>
                    Fixed an error in Uncorrelated_Roughness_BRDF_Model,
                    which caused it to yield incorrect results.
                </p>

                <p>
                    Fixed some errors in the set_parameter function for
                    Subsurface_Facet_BRDF_Model, Lambertian_BRDF_Model, and
                    Rayleigh_Defect_BRDF_Model
                </p>

                <p>
                    Fixed a problem that caused comments to not be accepted
                    in all conditions for console input.
                </p>

                <p>
                    Fixed a problem with some constructors and destructors
                    by creating a virtual destructor for the class Model and by
                    initializing some values in the copy constructor for
                    Bobbert_Vlieger_BRDF_Model.
                </p>


                <p><a href="#top"><span class="totop">Top of Page</span></a></p>



                <a name="v4.00" id="v4.00"><!-- --></a>
                <h2>Version 4.00 (July 2003)</h2>

                <p>Several new BRDF models were added:</p>

                <ul>
                    <li>
                        <a href="correlated_stack.htm">Correlated_Roughness_Stack_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="uncorrelated_stack.htm">Uncorrelated_Roughness_Stack_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="subsphere.htm">Subsurface_Sphere_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="firstdiffuse.htm">First_Diffuse_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="instrument.htm">Instrument_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="rayleighinstrument.htm">Rayleigh_Instrument_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="focussedbeam.htm">Focussed_Beam_Instrument_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="finiteaperture.htm">Finite_Aperture_Instrument_BRDF_Model</a>
                    </li>
                </ul>

                <p>
                    Several models now implement scattering in transmission
                    mode:
                </p>

                <ul>
                    <li>
                        <a href="microroughbrdf.htm">Microroughness_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="roughnes.htm">Roughness_Stack_BRDF_Model</a>
                    </li>

                    <li><a href="facet.htm">Facet_BRDF_Model</a></li>

                    <li>
                        <a href="sphrpart.htm">Double_Interaction_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="raydef.htm">Rayleigh_Defect_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="subsphere.htm">Subsurface_Sphere_BRDF_Model</a>
                    </li>
                </ul>

                <p>
                    A new class, <a href="coatedmiescat.htm">CoatedMieScatterer</a>, was added. It
                    implements the Mie scattering theory for a coated
                    sphere.
                </p>

                <p>
                    A fourth example, <a href="examples.htm#Example4">Example4</a>, has been added to the
                    set of example programs. This program is a Mie scattering
                    program.
                </p>

                <p>
                    Renamed the class <b>Torrance_Sparrow_BRDF_Model</b> to
                    <a href="torrspar.htm">Shadowed_Facet_BRDF_Model</a> since
                    the new name describes the model much better than the old
                    one. Torrance and Sparrow derived a specific shadow
                    function, and yet the model actually implemented the theory
                    for any shadow function.
                </p>

                <p>
                    Renamed the class <b>Spherical_Particle_BRDF_Model</b>
                    to <a href="sphrpart.htm">Double_Interaction_BRDF_Model</a>, and
                    removed the subclasses (previously
                    <b>Rayleigh_Particle_BRDF_Model</b>,
                    <b>Rayleigh_Gans_Particle_BRDF_Model</b>, and
                    <b>Mie_Particle_BRDF_Model</b>). The new class,
                    <b>Double_Interaction_BRDF_Model</b>, which requires a
                    <a href="sphrscat.htm">SphericalScatterer</a>, has the same
                    functionality as the previous suite of classes.
                </p>

                <p>
                    Renamed the classes <b>Null_PSD_Function</b>,
                    <b>Null_Slope_Distribution_Function</b>, and
                    <b>Null_Shadow_Function</b> to <a href="psd.htm">Unit_PSD_Function</a>, <a href="sdf.htm">Unit_Slope_Distribution_Function</a>, and
                    <a href="shadow.htm">Unit_Shadow_Function</a>,
                    respectively. The new names are more appropriate for their
                    function.
                </p>

                <p>
                    Improved the methods by which inheritance structures are
                    maintained:
                </p>

                <ul>
                    <li>
                        The class <a href="inherit.htm">Inheritance</a> was
                        significantly simplified and is no longer a templated
                        class.
                    </li>

                    <li>
                        All classes in inheritance structures now inherit a
                        class <a href="model.htm">Model</a>, which improves the
                        reliability of the codes across platforms, by avoiding
                        the use of <b>void*</b> pointers. All classes inheriting
                        <a href="model.htm">Model</a> have a virtual function
                        <a href="model.htm#clone">clone()</a> which returns a
                        pointer to a new copied instance of the class (a virtual
                        copy constructor).
                    </li>

                    <li>
                        All classes inheriting <a href="model.htm">Model</a>
                        no longer have a constructor taking an integral argument
                        <b>ask</b>. Now, to query the user for parameters, the
                        programmer must call the virtual function <a href="model.htm#AskUser">AskUser()</a>. This change increases
                        the flexibility that programmers can have regarding when
                        models are initialized with parameters. Also, changed the
                        macro <a href="inherit.htm#Get_Named_Model">Get_Named_Model</a> (and
                        the associated functions it called) so that it does not
                        ask the user for model parameters.
                    </li>

                    <li>
                        A new template class <a href="modelptr.htm">Model_Ptr&lt;model&gt;</a> was created to
                        facilitate copying and cloning of classes. It behaves
                        like a pointer to a <b>model</b>, except that it frees
                        any allocated memory when it is destructed. It differs
                        from the Standard Library's <b>auto_ptr&lt;model&gt;</b>
                        template class in that it copies by cloning, rather than
                        keeping track of ownership. <a href="modelptr.htm">Model_Ptr&lt;model&gt;</a> also has
                        functions for instantiating specific models.
                    </li>

                    <li>
                        In the past, many of the SCATMECH classes did not
                        have copy constructors or assignment operators defined,
                        even though pointers were used by them. As a result, some
                        memory could have been lost under some conditions. This
                        has been fixed in all of the SCATMECH classes that
                        required explicit copy constructors and assignment
                        operators.
                    </li>

                    <li>
                        Changed the registration process which records the
                        inheritance structure of the models in order to reduce
                        the size of executables that only need a small subset of
                        SCATMECH codes. As a result, several files were added to
                        the library.
                    </li>
                </ul>

                <p>
                    Errors in <a href="raydef.htm">Rayleigh_Defect_BRDF_Model</a> and <a href="onelayer.htm">One_Layer_BRDF_Model</a> were found and
                    corrected. The resulting differential cross sections and
                    BRDFs were off by a factor of the index of the medium
                    surrounding the defect.
                </p>

                <p>
                    The code for <a href="diffuse.htm">Diffuse_Subsurface_BRDF_Model</a> was
                    modified to properly account for light which is reflected
                    back into the material by the surface.
                </p>

                <p>
                    A number of classes did not have their function
                    <b>get_parameter</b> declared virtual. This has been
                    corrected.
                </p>

                <p>
                    Modified the function <b>dielectric_stack::AskUser()</b>
                    so that films can be specified without a film specification
                    file. See <a href="dielstack.htm">
                        class
                        dielectric_stack
                    </a>.
                </p>

                <p>
                    Removed the function <b>
                        JonesVector::operator*(const
                        JonesMatrix&amp; m)
                    </b>. The interpretation of left
                    multiplication of a Jones matrix by a Jones vector is
                    poorly defined.
                </p>

                <p>
                    Changed the improper conversion constructors,
                    <b>JonesMatrix(const MuellerMatrix&amp; m)</b> and
                    <b>StokesVector(const StokesVector&amp; s)</b>, so that
                    they are explicit constructors. This change avoids the
                    accidental use of the improper conversions. See <a href="jonesmatrix.htm">class JonesMatrix</a> and <a href="jonesvector.htm">class JonesVector</a>.
                </p>

                <p>
                    Removed the <b>MuellerMatrix(double x)</b> constructor,
                    and replaced its function with a new function
                    <b>MuellerDepolarizer(double x)</b>. Added the functions
                    <b>MuellerZero()</b>, <b>MuellerUnit(double x)</b>, and
                    <b>
                        MuellerPartialPolarizer(double tmax, double tmin, double
                        angle)
                    </b>. Also added functions which return a variety of
                    common polarization states. See <a href="elements.htm">Common Optical Elements</a>.
                </p>

                <p>
                    Created a function <b>SCATMECH_message</b> to handle all
                    terminal output, and functions <b>SCATMECH_set_istream</b>,
                    <b>SCATMECH_set_ostream</b>, and <b>SCATMECH_delim</b> to
                    set the input stream, the output stream, and the delimator
                    used for the input stream. These changes allow more
                    flexibility to change the input and output streams. See
                    <a href="askuser.htm">User Interface Functions</a>.
                </p>

                <p>
                    Removed the function <b>read_stack_file()</b> from the
                    class <b>dielectric_stack</b> and replaced it with an
                    equivalent static member function
                    <b>
                        dielectric_stack::AskUser(const string&amp; prompt,const
                        string&amp; deflt)
                    </b>. This change was made because the
                    old function did not give a descriptive prompt, which made
                    some uses of the function confusing. It also makes the
                    library conform to the AskUser function convention of
                    SCATMECH. See <a href="dielstack.htm">
                        class
                        dielectric_stack
                    </a>.
                </p>

                <p>
                    Changed the class <b>dielectric_stack</b> so that
                    complex angles of incidence can be handled. This change was
                    made for a future use, where evanescent fields are incident
                    upon the surface. See <a href="dielstack.htm">
                        class
                        dielectric_stack
                    </a>.
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>



                <a name="v3.01" id="v3.01"><!-- --></a>
                <h2>Version 3.01 (May 2002)</h2>

                <p>
                    Added a feature in all <b>AskUser</b> routines:
                    redirection of the input stream to a file can be achieved
                    by starting a response with "&lt;" followed by a filename.
                    Redirection continues until a line beginning with
                    "&gt;".
                </p>

                <p>
                    Corrected code in <tt>bobbert1.cpp</tt> , which affected
                    the solution only for particles separated from the
                    surface.
                </p>

                <p>
                    Corrected code in <tt>askuser.cpp</tt> in routine
                    <b>SCATMECH_set_streams</b>.
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>



                <a name="v3.00" id="v3.00"><!-- --></a>
                <h2>Version 3.00 (December 2001)</h2>

                <p>
                    Support for non-ANSI/ISO-compatable C++ compilers was
                    removed. The class for complex numbers is now <tt>complex&lt;double&gt;</tt> , and the library
                    uses the <tt>std</tt>
                    namespace. The entire SCATMECH library is contained in
                    the namespace <tt>SCATMECH</tt>. The SCATMECH
                    namespace can be removed by setting the preprocessor
                    variable <tt>NO_SCATMECH_NAMESPACE</tt>.

                <p>
                    Three new light scattering models were
                    added:
                </p>

                <ul>
                    <li>
                        <a href="bobvlieg.htm">Bobbert_Vlieger_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="diffuse.htm">Diffuse_Subsurface_BRDF_Model</a>
                    </li>

                    <li>
                        <a href="flake.htm">Subsurface_Facet_BRDF_Model</a>
                    </li>
                </ul>

                <p>
                    A new virtual class, <a href="local.htm">Local_BRDF_Model</a>, was created for all
                    models which are best defined in terms of differential
                    scattering cross-sections (DSCs) rather than bidirectional
                    reflectance distribution functions (BRDFs). This class
                    enables access to the Jones and Mueller matrix DSCs and
                    provides the conversion from DSC to BRDF.
                </p>

                <p>
                    Three new virtual classes, with a number of inherited
                    classes, were created to enable plug-in of new functional
                    forms for the slope distribution function, the power
                    spectral denstiy (PSD) function, and the shadow and
                    obscuration function:
                </p>

                <ul>
                    <li>
                        <a href="sdf.htm">Slope_Distribution_Function</a>
                    </li>

                    <li><a href="psd.htm">PSD_Function</a></li>

                    <li><a href="shadow.htm">Shadow_Function</a></li>
                </ul>

                <p>
                    The functions <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#jones">jones</a> and <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#mueller">mueller</a> were changed from
                    public access to protected access.
                </p>

                <p>
                    The virtual class <a href="BRDF_Model.htm">BRDF_Model</a> has been modified by adding
                    functions, <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#jones2">
                        Jones
                    </a> and <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#mueller2">Mueller</a>, that enable
                    scattering models to be evaluated in different polarization
                    coordinates. The commonly used s-p basis for describing
                    polarization can be replaced with an x-y basis or one
                    defined with respect to the plane including the incident
                    and scattering directions. See <a href="BRDF_Model.htm#cs">Coordinate_System</a> for more details.
                    The default coordinate system is the s-p basis for both the
                    incident and scattered directions.
                </p>

                <p>
                    Vector-based versions of <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#jones3">Jones</a> and <a href="BRDF_Model.htm">BRDF_Model</a>::<a href="BRDF_Model.htm#mueller3">Mueller</a> were added to enable
                    these functions to be evaluated when the directions of the
                    source, viewer, and surface normal are known. These
                    functions should improve the functionality of the library
                    in rendering applications.
                </p>

                <p>
                    The following classes are new and allow the library to
                    more easily calculate the wavelength dependence of optical
                    properties:
                </p>

                <ul>
                    <li>
                        <a href="scattabl.htm">Table</a> -- This class stores
                        a table of data, allowing for linear interpolation
                        between points.
                    </li>

                    <li>
                        <a href="dielfunc.htm">dielectric_function</a> --
                        This class uses <a href="scattabl.htm">Table</a> to store
                        the wavelength dependence of the optical constants of a
                        material.
                    </li>
                </ul>

                <p>
                    The class <a href="lambert.htm">Lambertian_BRDF_Model</a> now uses <a href="scattabl.htm">Table</a> to store the reflectance as a
                    function of wavelength.
                </p>

                <p>
                    The following classes associated with the optical
                    properties of materials were substantially changed:
                </p>

                <ul>
                    <li>
                        <a href="dielstack.htm">dielectric_stack</a> -- This
                        class has changed to remove the wavelength as a property
                        of the class and to use the class <a href="dielfunc.htm">dielectric_function</a> for storage of the
                        optical properties of the layers. These changes
                        facilitate the use of the class to study the wavelength
                        dependence of reflection, when the optical constants of
                        the film materials are not constant.
                    </li>

                    <li>
                        <b>Thin_Film_Transfer_Matrix</b> is now documented
                        only in the source code.
                    </li>
                </ul>

                <p>
                    All classes that used either the classes <a href="dielectric.htm">dielectric_constant</a>, <a href="optconst.htm">optical_constant</a>, or <a href="dielstack.htm">dielectric_stack</a> were modified to
                    enable use of the class <a href="dielfunc.htm">dielectric_function</a> and the new version
                    of <a href="dielstack.htm">dielectric_stack</a>.
                </p>

                <p>
                    A new class, <a href="sdf.htm">Slope_Distribution_Function</a>, was added to
                    enable the class <a href="facet.htm">Facet_BRDF_Model</a>
                    to have an arbitrary slope distribution function.
                </p>

                <p>
                    The class <a href="facet.htm">Facet_BRDF_Model</a> was
                    changed to inherit the properties of <a href="dielstack.htm">dielectric_stack</a>. This change allows
                    the theory to model a very rough surface with a conformal
                    stack of dielectric layers. Also, an intermediate
                    singularity existed for scattering in the retroreflection
                    direction; this singularity was removed by forcing a small
                    change in the scattering angle for such conditions.
                </p>

                <p>
                    The data type for character strings was changed from
                    <tt>char*</tt> to the
                    class <tt>std::string</tt>.
                </p>

                <p>
                    The
                    classes <b>Vector</b>, <b>CVector</b>, <b>Matrix</b>, and
                    <b>CMatrix</b> have been replaced by the templated classes
                    <a href="vector.htm">Vector3D&lt;TYPE&gt;</a> and <a href="matrix.htm">Matrix3D&lt;TYPE&gt;</a>. The documentation
                    for these classes have been moved to the respective include
                    files <a href="../code/vector3d.h">vector3d.h</a> and
                    <a href="../code/matrix3d.h">matrix3d.h</a>. The old
                    classes continue to exist as typedefs.
                </p>

                <p>
                    The class <a href="BRDF_Model.htm">BRDF_Model</a> now
                    defaults to <a href="BRDF_Model.htm#type">BRDF_Model::type=BRDF_Model::REFLECTION</a>.
                </p>

                <p>
                    The class <a href="except.htm">SCATMECH_exception</a>,
                    which inherits <tt>std::exception</tt>, was created to
                    enable exception handling. All fatal errors in the SCATMECH
                    library now throw <a href="except.htm">SCATMECH_exception</a>.
                </p>

                <p>
                    Additional code was added to all of the <a href="BRDF_Model.htm">BRDF_Model</a> classes in order to enable
                    the dynamic creation of a database of classes. With the new
                    code, new classes can be created by a user and registered
                    with the database, thus allowing the new classes to be
                    incorporated more seamlessly into the library. Two source
                    files, <a href="../code/User/user.h">User/user.h</a> and
                    <a href="../code/User/user.cpp">User/user.cpp</a>, and a
                    manual page <a href="userbrdf.htm">
                        "Writing your own
                        BRDF_Model class"
                    </a> have been created to facilitate the
                    creation of user-defined scattering models. The header file
                    <a href="../code/inherit.h">inherit.h</a> defines and
                    documents the <a href="inherit.htm">Inheritance&lt;Model,Parent&gt;</a> class
                    which is used to tabulate the class inheritance
                    structure.
                </p>

                <p>
                    Many classes have a new function, <b>set_parameter</b>,
                    added to them that allows setting parameters by name. These
                    functions pass requests to members and children, when
                    appropriate.
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>



                <a name="v2.00" id="v2.00"><!-- --></a>
                <h2>Version 2.00 (March 2001)</h2>

                <p>Four new models were added:</p>

                <ul>
                    <li>
                        <a href="roughnes.htm">Roughness_Stack_BRDF_Model</a>
                    </li>

                    <li><a href="twoface.htm">Two_Face_BRDF_Model</a></li>

                    <li><a href="onelayer.htm">One_Layer_BRDF_Model</a></li>

                    <li>
                        <a href="torrspar.htm">Torrance_Sparrow_BRDF_Model</a>
                    </li>
                </ul>

                <p>
                    The classes <a href="sphrpart.htm">Spherical_Particle_BRDF_Model</a> and
                    <a href="raydef.htm">Rayleigh_Defect_BRDF_Model</a> each
                    had a <a href="dielstack.htm">dielectric_stack</a> as a
                    member function. The classes now inherit the properties of
                    <a href="dielstack.htm">dielectric_stack</a>, allowing them
                    to access all of the member functions of <a href="dielstack.htm">dielectric_stack</a>.
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>



                <a name="v1.01" id="v1.01"><!-- --></a>
                <h2>Version 1.01 (July 2000)</h2>

                <p>
                    SPHDFCT.CPP: An error was discovered in
                    Rayleigh_Defect_BRDF_Model that affected the absolute BRDF,
                    but not the polarization. The error was fixed. (11 April
                    2000).
                </p>

                <p>
                    RAYGDFCT.CPP, POLS.CPP: These files should not have been
                    included in the distribution. The files have been removed.
                    (22 June 2000).
                </p>

                <p>
                    CROUGH.CPP: An error was found in
                    Correlated_Roughness_BRDF_Model. If the substrate index was
                    real, the results were erroneous. The problem was traced to
                    the wrong sign of a square root being used. The error was
                    fixed. (30 June 2000).
                </p>

                <p>
                    Numerous files: The C++ scoping rules for "for" loops
                    changed so that the "i" in "for (int i=0;i&lt;n;++i)" now
                    belongs to the loop, rather than the code that contains the
                    loop. To maintain compatability with older versions of C++,
                    most of the declarations were moved outside of the
                    loop.
                </p>

                <p>
                    Numerous files: Some compilers have displayed errors
                    with "COMPLEX(x)", when "x" is a double. This problem was
                    fixed by changing all "COMPLEX(x)" to "(COMPLEX)(x)".
                </p>

                <p><a href="#top"><span class="totop">Top of Page</span></a></p>

                <!-- START FOOTER -->
                <hr>
                <h2>For More Information</h2>

                <p>
                    <a href="https://www.nist.gov/people/thomas-germer">SCATMECH Technical Information and Questions</a><br>
                    <a href="http://www.nist.gov/pml/div685/index.cfm" target="_top">Sensor Science Division Home Page</a><br>
                    <a href="mailto:fraser@nist.gov">Sensor Science Division Inquiries</a><br>
                    <a href="mailto:thomas.germer@nist.gov">Website Comments</a>

                <p>
                    Current SCATMECH version: <a href="./download.htm">7.22 (April 2021)</a><br>
                    <br>

            </td>
        </tr>
    </table>

</body>
</html>
