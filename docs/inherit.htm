<html>
<head>
<link rel="stylesheet" href="https://pages.nist.gov/nist-header-footer/css/nist-combined.css">
<script src="https://pages.nist.gov/nist-header-footer/js/jquery-1.9.0.min.js" type="text/javascript" defer="defer"></script>
<script src="https://pages.nist.gov/nist-header-footer/js/nist-header-footer.js" type="text/javascript" defer="defer"></script>
  <meta name="generator" content=
  "HTML Tidy for Cygwin (vers 1st September 2004), see www.w3.org">
   <link rel="STYLESHEET" href="style.css" type="text/css">

  <title>SCATMECH: Inheritance</title>
<script language="JavaScript" id="_fed_an_js_tag" src="/js/federated-analytics.all.min.js?agency=NIST&subagency=pml&pua=UA-37115410-46&yt=true"></script>
</head>

<body><br>
  <a name="top" id="top"><!-- --></a>

  <table width="98%" border="0" cellpadding="0" cellspacing="0"
  align="center">
    <tr>
      <td>
        <p class="nav"><a href="index.htm">SCATMECH</a> &gt; <a href=
        "classes.htm">Classes and Functions</a> &gt;
        <a href="classes.htm#Utility">Utility</a> &gt;
        Inheritance</p>

	<h1>class Inheritance</h1>

        
        <hr>
	<p>
        The SCATMECH library makes heavy use of class inheritance.
        In order to aid run-time creation of instances of these
        classes, it is helpful to have a database of all the child
        classes for any parent class. The class <b>Inheritance</b>
        enables such a database of the inheritance structure of a
        class. Thus, each class which is part of an inheritance
        structure has a static data member

        <blockquote>
          <pre>
static Inheritance inheritance;
</pre>
        </blockquote>
	<p>and a virtual member function<br>
        <br>

        <blockquote>
          <pre>
virtual Model* clone() const;
</pre>
        </blockquote>

        <p>This
        static member contains pointers to all of the class'
        children. A macro <b>Get_Model(_Model)</b> creates a menu,
        from which a user can chose a child class of <b>Model</b>,
        and returns a pointer to a <b>_Model</b>. Another macro
        <b>Get_Named_Model(_Model,name)</b> returns a <b>_Model</b>
        named <b>name</b>.</p>
	
	<h2>Include file:</h2>

          <pre>
#include "<a href="../code/inherit.h">inherit.h</a>"
</pre>
        <h2>Source code:</h2>

          <pre>
<a href="../code/inherit.cpp">inherit.cpp</a>
</pre>
        <h2>See also:</h2>

        <p><a href="index.htm">SCATMECH Home</a>,&nbsp;
        <a href="BRDF_Model.htm">BRDF_Model</a>,&nbsp; <a href=
        "sphrscat.htm">SphericalScatterer</a>,&nbsp; <a href=
        "psd.htm">PSD_Function</a>,&nbsp; <a href=
        "sdf.htm">Slope_Distribution_Function</a>,&nbsp; <a href=
        "shadow.htm">Shadow_Function</a>,&nbsp; <a href=
        "phase.htm">Phase_Function</a></p>
	
	<h2>Definition of public elements:</h2>

          <pre>
class Inheritance {
    <a href=
"#Inheritance">Inheritance</a>(const string&amp; name,const string&amp; description);
    string <a href="#get_name">get_name</a>();
    string <a href="#get_name">get_description</a>();
    Model* <a href="#Get_Model">get_model</a>();
    Model* <a href=
"#Get_Named_Model">get_named_model</a>(const string&amp; name);

    bool is_virtual() const;
    bool is_instantiable() const;

    const Inheritance* get_named_inheritance(const std::string& model) const;
    const InheritanceList& get_children() const;
    const Inheritance* get_parent_inheritance() const;
    void get_parameters(ModelParameterList& result,bool top=true) const;
    const ModelParameterBase* get_modelparameter(const std::string& param) const;
    Model* make() const;
    Model* clone(const Model& m) const;

    void <a href="#Register">Register_Model</a>();
};

#define <a href=
"#Get_Model">Get_Model</a>(_Model)            _Model::inheritance.Get_Model()
#define <a href=
"#Get_Named_Model">Get_Named_Model</a>(_Model,name) _Model::inheritance.Get_Named_Model(name)
#define <a href=
"#Register">Register_Model</a>(_Model)       _Model::inheritance.Register_Model()

void <a href="#Register">Register_SCATMECH_Models</a>();
</pre>

        <hr>

        <h3><a name="Inheritance" id=
        "Inheritance">Inheritance(const string&amp; name,const
        string&amp; description)</a></h3>

        <blockquote>
          <p>The class constructor takes two arguments of type
          <b>string</b>, one which gives the model's name and the
          other the model's description.</p>
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="get_name"
        id="get_name">string get_name()<br>
        string get_description()</a></h3>

        <blockquote>
          <p>These functions returns strings with the name of the
          class or its description.</p>
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name=
        "Get_Model" id="Get_Model">Model* get_model()<br>
        macro Get_Model(_Model)</a></h3>

        <blockquote>
          <p>This function and macro return a pointer to a new
          instantiation of <b>Model</b>. They present the user with
          a menu with all registered classes inheriting
          <b>Model</b> and will prompt the user for model
          parameters.</p>
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name=
        "Get_Named_Model" id="Get_Named_Model">Model*
        get_named_model(const string&amp; name)<br>
        macro Get_Named_Model(_Model,const string&amp;
        name)</a></h3>

        <blockquote>
          <p>This function and macro return a pointer to a new
          instantiation of <b>Model</b>. They return a pointer to a
          <b>Model</b> whose name matches <b>name</b> and does not
          prompt the user for model parameters.</p>
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="Register"
        id="Register">void Register_Model()<br>
        macro Register_Model(_Model)<br>
        void Register_SCATMECH_Models()</a></h3>

        <blockquote>
          <p>The first of these functions registers the existence
          of this <b>Model</b> with its <b>Parent</b>. The second
          of these functions registers all models in the SCATMECH
          library with their parents.</p>
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

<!-- START FOOTER -->
<hr>
<h2>For More Information</h2>

<p>
<a href="https://www.nist.gov/people/thomas-germer">SCATMECH Technical Information and Questions</a><br>
<a href="http://www.nist.gov/pml/div685/index.cfm" target="_top">Sensor Science Division Home Page</a><br>
<a href="mailto:fraser@nist.gov">Sensor Science Division Inquiries</a><br>
<a href="mailto:thomas.germer@nist.gov">Website Comments</a>

<p>
Current SCATMECH version: <a href="./download.htm">7.22 (April 2021)</a><br>
<br>

</td>
</tr>
</table>

</body>
</html>
