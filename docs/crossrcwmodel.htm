<html>
<head>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.x-git.min.js"></script>
    <script type="text/javascript" src="https://pages.nist.gov/leaveNotice/js/jquery.leaveNotice-nist.min.js"></script>
    <script src="https://pages.nist.gov/nist-header-footer/js/nist-header-footer.js" type="text/javascript" defer="defer"></script>
    <link rel="stylesheet" type="text/css" href="https://pages.nist.gov/leaveNotice/css/jquery.leaveNotice.css" />
    <link rel="stylesheet" href="https://pages.nist.gov/nist-header-footer/css/nist-combined.css" />

    <script type="text/javascript">
        $(document).ready(function () {
            // Mark external (non-nist.gov) A tags with class "external"
            //If the adress start with https and ends with nist.gov
            var re_nist = new RegExp('^https?:\/\/((^\/)*\.)*nist\\.gov(\/|$)');
            //Regex to find address that start with https
            var re_absolute_address = new RegExp('^((https?:)?\/\/)');
            $("a").each(function () {
                var url = $(this).attr('href');
                if (re_nist.test(url) || !re_absolute_address.test(url)) {
                    $(this).addClass('local');
                } else {
                    $(this).addClass('external');
                }
            });
            // Add leaveNotice to external A elements
            $('a.external').leaveNotice({
                siteName: 'the NIST fork of the leaveNotice jQuery plugin',
            });
        });
    </script>

    <meta name="generator" content="HTML Tidy for Cygwin (vers 1st September 2004), see www.w3.org">
    <link rel="STYLESHEET" href="style.css" type="text/css">

    <title>SCATMECH: CrossRCW_Model</title>
    <script async type="text/javascript" id="_fed_an_ua_tag" src="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=NIST&subagency=github&pua=UA-66610693-1&yt=true&exts=ppsx,pps,f90,sch,rtf,wrl,txz,m1v,xlsm,msi,xsd,f,tif,eps,mpg,xml,pl,xlt,c"></script>
</head>

<body><br>
  <a name="top" id="top"><!-- --></a>

  <table width="98%" border="0" cellpadding="0" cellspacing="0"
  align="center">
    <tr>
      <td>
        <p class="nav"><a href="index.htm">SCATMECH</a> &gt; <a href=
        "classes.htm">Classes and Functions</a> &gt;
        <a href="classes.htm#GM">Grating Models</a> &gt;
        CrossRCW_Model</p>

        <h1>class CrossRCW_Model</h1>

        <hr>

        <p>The class <b>CrossRCW_Model</b> implements Rigorous Coupled-Wave
        theory of <a href="#SeeAlso">L.&nbsp;Li</a> for a crossed grating, that is, a grating with periodicity along two directions.
	The class has a member parameter of type 
        <a href="crossgrating.htm">CrossGrating</a> that describes the
        specific grating. The class calculates fields in
        reflection or transmission, and for incident radiation propagating from above or below.  The fields outside of the
	grating are accessed through the function, <a href="#GetAmplitude">GetAmplitude(int i,int j)</a>,
	while diffraction efficiencies are accessed through the function
	<a href="#GetIntensity">GetIntensity(int i,int j)</a>.</p>

        <h2>Parameters:</h2>

        <table border="1" cellpadding="5">
          <tr>
            <th>Parameter</th>
            <th>Data Type</th>
            <th>Description</th>
            <th>Default</th>
          </tr>

          <tr>
            <td class="parameter">thetai</td>
           <td class="datatype">double</td>
            <td class="description">The incident angle, measured from the surface normal [degrees].</td>
            <td class="default">0</td>
          </tr>

          <tr>
            <td class="parameter">lambda</td>
            <td class="datatype">double</td>
            <td class="description">The wavelength of the light in vacuum [&#181;m].</td>
            <td class="default">0.532</td>
          </tr>


          <tr>
            <td class="parameter">rotation</td>
            <td class="datatype">double</td>
            <td class="description">The azimuthal rotation of the sample [degrees].</td>
            <td class="default">0</td>
          </tr>

          <tr>
            <td class="parameter">type</td>
            <td class="datatype">int</td>
            <td class="description">
	      Indicates whether the light is incident from above the
            substrate or from within the substrate and whether the
            scattering is evaluated in reflection or transmission.
            The choices are:<br>
	      <b>0</b> : Light is incident from the above the substrate, and scattering is evaluated in reflection.<br>
	      <b>1</b> : Light is incident from the above the substrate, and scattering is evaluated in transmission.<br>
	      <b>2</b> : Light is incident from the within the substrate, and scattering is evaluated in reflection.<br>
	      <b>3</b> : Light is incident from the within the substrate, and scattering is evaluated in transmission.<br>
	      For <b>1</b>, <b>2</b>, and <b>3</b>, the substrate must be non-absorbing.<br>
            </td>
            <td class="default">0</td>
          </tr>

          <tr>
            <td class="parameter">order1</td>
            <td class="datatype">int</td>
            <td class="description">The maximum Floquet order in the field expansion in the 1st coordinate.</td>
            <td class="default">10</td>
          </tr>

          <tr>
            <td class="parameter">order2</td>
            <td class="datatype">int</td>
            <td class="description">The maximum Floquet order in the field expansion in the 2nd coordinate.</td>
            <td class="default">10</td>
          </tr>

          <tr>
            <td class="parameter">grating</td>
            <td class="datatype"><a href="crossgrating.htm">CrossGrating_Ptr</a></td>
            <td class="description">A description of the grating profile and optical properties.</td>
            <td class="default">OneD_CrossGrating</td>
          </tr>
        </table><br>

	  <p>The following parameter is not a formal parameter, but is accessible using the set_parameter(parameter,value) function.</p>

        <table border="1" cellpadding="5">
          <tr>
            <th>Parameter</th>
            <th>Data Type</th>
            <th>Description</th>
            <th>Default</th>
          </tr>

          <tr>
            <td class="parameter">WriteEigenvalues</td>
           <td class="datatype">string</td>
            <td class="description">If this value is set, it specifies a file to which the eigenvalues for each 
		of the layers are written.  This information can be used to evaluate the band structure of
	        a photonic crystal.</td>
            <td class="default">(blank)</td>
          </tr>
        </table><br>


        <a name="SeeAlso" id="SeeAlso"><h2>See also:</h2></a>

        <p><a href="index.htm">SCATMECH Home</a>, &nbsp;
        <a href="muellermatrix.htm">MuellerMatrix</a>, &nbsp;
        <a href="jonesmatrix.htm">JonesMatrix</a>, &nbsp; <a href=
        "crossgrating.htm">CrossGrating</a></p>

        <p><a href="https://doi.org/10.1364/JOSAA.14.002758">L. Li, "New formulation of the Fourier modal method for crossed surface-relief gratings,"
	J. Opt. Soc. Am. A <b>14</b>, 2758-2767 (1997).</a></p>

        <p><a href="https://doi.org/10.1364/JOSAA.13.001024">L. Li, "Formulation and comparison of two recursive matrix algorithms for modeling layered diffraction gratings,"
	J. Opt. Soc. Am. A <b>13</b>, 1024-1035 (1996).</a></p>



	<h2>Include file:</h2>

          <pre>
#include "<a href="../code/rcw.h">crossrcw.h</a>"
</pre>
        <h2>Source code:</h2>

          <pre>
<a href="../code/rcw.cpp">crossrcw.cpp</a>
</pre>
        <h2>Definition of public elements:</h2>

          <pre>
class CrossRCW_Model : public <a href=
"model.htm">Model</a> {
public:
        <a href="jonesmatrix.htm">JonesMatrix</a> <a href="#GetAmplitude">GetAmplitude</a>(int i,int j);
        <a href="muellermatrix.htm">MuellerMatrix</a> <a href="#GetIntensity">GetIntensity</a>(int i,int j);
        <a href="vector.htm">Vector</a> <a href="#GetDirection">GetDirection</a>(int i,int j);
	<a href="vector.htm">CVector</a> <a href="#GetPropagationVector">GetPropagationVector</a>(int i,int j);

        <a href="vector.htm">CVector</a> <a href="#GetEField">GetEField</a>(const <a href="jonesvector.htm">JonesVector</a>&amp; input, const <a href="vector.htm">Vector</a>&amp; pos);
        <a href="vector.htm">CVector</a> <a href="#GetHField">GetHField</a>(const <a href="jonesvector.htm">JonesVector</a>&amp; input, const <a href="vector.htm">Vector</a>&amp; pos);
        <a href="vector.htm">CVector</a> <a href="#GetDField">GetDField</a>(const <a href="jonesvector.htm">JonesVector</a>&amp; input, const <a href="vector.htm">Vector</a>&amp; pos);
        <a href="vector.htm">CVector</a> <a href="#GetBField">GetBField</a>(const <a href="jonesvector.htm">JonesVector</a>&amp; input, const <a href="vector.htm">Vector</a>&amp; pos);
};

</pre>

        <hr>



        <h3><a name=
        "GetAmplitude" id="GetAmplitude">JonesMatrix GetAmplitude(int i,int j)</a></h3>
	<blockquote><p>
          <b>GetAmplitude(i,j)</b>
          returns the Jones matrix associated with the (<i>i</i>,<i>j</i>) order diffraction.  
	  The Jones matrix relates the amplitude of the diffracted plane wave
	  to the amplitude of the incident plane wave.
	  </blockquote>
        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

        <h3><a name=
        "GetDirection" id="GetDirection">Vector GetDirection(int i,int j)</a></h3>
	<blockquote><p>
          <b>GetDirection(i,j)</b>
          returns the direction of propagation associated with the (<i>i</i>,<i>j</i>) order diffraction. 
	  If the substrate is absorbing or if the diffraction order does not propagate, then this function will return (0,0,0).
	  If it is propagating, the vector will have unit length.
	  </blockquote>
        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="GetIntensity" id="GetIntensity">MuellerMatrix</a> GetIntensity(int i,int j)</h3>
        <blockquote><p>
          <b>GetIntensity(i,j)</b> returns the Mueller matrix diffraction efficiency for the (<i>i</i>,<i>j</i>) diffracted 
	      order.  
	      If the order does not propagate, then the function returns a zero Mueller matrix.
        </blockquote>
        <p><a href=
        "#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="GetPropagationVector" id="GetPropagationVector">CVector GetPropagationVector(int i,int j)</a></h3>
        <blockquote><p>
          <b>GetPropagationVector(i,j)</b> returns the propagation vector for the (<i>i</i>,<i>j</i>) diffracted 
	      order.  
        </blockquote>
        <p><a href=
        "#top"><span class="totop">Top of Page</span></a></p>

        <h3>
	<a name="GetEField">CVector GetEField(const JonesVector&amp; input, const Vector&amp; pos)</a><br>
	<a name="GetHField">CVector GetHField(const JonesVector&amp; input, const Vector&amp; pos)</a><br>
	<a name="GetDField">CVector GetDField(const JonesVector&amp; input, const Vector&amp; pos)</a><br>
	<a name="GetBField">CVector GetBField(const JonesVector&amp; input, const Vector&amp; pos)</a>
	</h3>

        <blockquote><p>
          These functions return the amplitude of the electric field (<b>GetEField</b>), the magnetic field (<b>GetHField</b>), 
	  the electric displacement (<b>GetDField</b>), and the magnetic induction (<b>GetBField</b>), evaluated at location <b>pos</b> for a 
	  given incident Jones vector <b>input</b>. Locations are defined with respect to the top of the grating (incident beam side), with positive z coordinates 
	  being in the incident half-space.  At this time, the fields can only be evaluated outside of the grating, and only in the region defined by parameter <b>type</b>. 
	  That is, if <b>type</b> is 0, the fields can be evaluated above the grating, and if <b>type</b> is 1, the fields can be evaluated below the grating.

        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>



<!-- START FOOTER -->
<hr>
<h2>For More Information</h2>

<p>
<a href="https://www.nist.gov/people/thomas-germer">SCATMECH Technical Information and Questions</a><br>
<a href="http://www.nist.gov/pml/div685/index.cfm" target="_top">Sensor Science Division Home Page</a><br>
<a href="mailto:fraser@nist.gov">Sensor Science Division Inquiries</a><br>
<a href="mailto:thomas.germer@nist.gov">Website Comments</a>

<p>
Current SCATMECH version: <a href="./download.htm">7.22 (April 2021)</a><br>

<br>

</td>
</tr>
</table>

</body>
</html>
