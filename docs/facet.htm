<html>
<head>
    <link rel="stylesheet" href="https://pages.nist.gov/nist-header-footer/css/nist-combined.css">
    <script src="https://pages.nist.gov/nist-header-footer/js/jquery-1.9.0.min.js" type="text/javascript" defer="defer"></script>
    <script src="https://pages.nist.gov/nist-header-footer/js/nist-header-footer.js" type="text/javascript" defer="defer"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Mark external (non-nist.gov) A tags with class "external"
            //If the adress start with https and ends with nist.gov
            var re_nist = new RegExp('^https?:\/\/((^\/)*\.)*nist\\.gov(\/|$)');
            //Regex to find address that start with https
            var re_absolute_address = new RegExp('^((https?:)?\/\/)');
            $("a").each(function () {
                var url = $(this).attr('href');
                if (re_nist.test(url) || !re_absolute_address.test(url)) {
                    $(this).addClass('local');
                } else {
                    $(this).addClass('external');
                }
            });
            // Add leaveNotice to external A elements
            $('a.external').leaveNotice({
                siteName: 'the NIST fork of the leaveNotice jQuery plugin',
            });
        });
    </script>

    <meta name="generator" content="HTML Tidy for Cygwin (vers 1st September 2004), see www.w3.org">
    <link rel="STYLESHEET" href="style.css" type="text/css">

    <title>SCATMECH: Facet_BRDF_Model</title>
    <script async type="text/javascript" id="_fed_an_ua_tag" src="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=NIST&subagency=github&pua=UA-66610693-1&yt=true&exts=ppsx,pps,f90,sch,rtf,wrl,txz,m1v,xlsm,msi,xsd,f,tif,eps,mpg,xml,pl,xlt,c"></script>
</head>

<body><br>
  <a name="top" id="top"><!-- --></a>

  <table width="98%" border="0" cellpadding="0" cellspacing="0"
  align="center">
    <tr>
      <td>
        <p class="nav"><a href="index.htm">SCATMECH</a> &gt; <a href=
        "classes.htm">Classes and Functions</a> &gt;
        <a href="classes.htm#SSM">Surface Scattering Models</a>
        &gt; Facet_BRDF_Model</p>

	<h1>class
        Facet_BRDF_Model</h1>

        
        <hr>

        <p>The class <b>Facet_BRDF_Model</b> implements the specular
        point theory for scattering from very rough surfaces.
	<br><br>
        <center>
          <img src="Images/facet.gif" width="400" height="155" alt=
          "Diagram showing Facet_BRDF_Model">
        </center>

	<h2>Parameters:</h2>

        <table border="1" cellpadding="5">
          <tr>
            <th>Parameter</th>

            <th>Data
            Type</th>

            <th>Description</th>

            <th>Default</th>
          </tr>

          <tr>
            <td class="parameter">lambda</td>
            <td class="datatype">double</td>
            <td class="description">Wavelength of the light
            in vacuum [&#181;m].<br>
            (Inherited from <a href=
            "BRDF_Model.htm">BRDF_Model</a>.)</td>
            <td class="default">0.532</td>
          </tr>

          <tr>
            <td class="parameter">type</td>
            <td class="datatype">int</td>
            <td class="description">
	      Indicates whether the light is incident from above the
            substrate or from within the substrate and whether the
            scattering is evaluated in reflection or transmission.
            The choices are:<br>
	      <b>0</b> : Light is incident from the above the substrate, and scattering is evaluated in reflection.<br>
	      <b>1</b> : Light is incident from the above the substrate, and scattering is evaluated in transmission.<br>
	      <b>2</b> : Light is incident from the within the substrate, and scattering is evaluated in reflection.<br>
	      <b>3</b> : Light is incident from the within the substrate, and scattering is evaluated in transmission.<br>
	      For <b>1</b>, <b>2</b>, and <b>3</b>, the substrate must be non-absorbing.<br>
            (Inherited from <a href=
            "BRDF_Model.htm">BRDF_Model</a>).</td>
            <td class="default">0</td>
          </tr>

          <tr>
            <td class="parameter">substrate</td>

            <td class="datatype"><a href="dielfunc.htm">dielectric_function</a></td>

            <td class="description">The
            optical constants of the substrate, expressed as a
            complex number (n,k) or, optionally, as a function of
            wavelength.<br>
            (Inherited from <a href=
            "BRDF_Model.htm">BRDF_Model</a>.)</td>

            <td class="default">(4.05,0.05)</td>
          </tr>

          <tr>
            <td class="parameter">sdf</td>

            <td class="datatype"><a href="sdf.htm">Slope_Distribution_Function</a></td>

            <td class="description">Function
            describing the isotropic two-dimensional distribution
            of surface slopes.</td>

            <td class="default">Exponential_Slope_Distribution_Function</td>
          </tr>

          <tr>
            <td class="parameter">stack</td>

            <td class="datatype"><a href="stackmodel.htm">StackModel_Ptr</a></td>

            <td class="description">Description of any stack
            of films deposited on the substrate. The films are assumed to be conformal and of
            total thickness much less than the horizontal scale of
            the roughness.</td>

            <td class="default">No_StackModel</td>
          </tr>
        </table>

        <h2>See also:</h2>

        <p><a href="index.htm">SCATMECH Home</a>, &nbsp;
        <a href="convent.htm">Conventions</a>, &nbsp; <a href=
        "BRDF_Model.htm">BRDF_Model</a>, &nbsp; <a href=
        "roughbrdf.htm">Roughness_BRDF_Model</a>, &nbsp; <a href=
        "torrspar.htm">Torrance_Sparrow_BRDF_Model</a>, &nbsp;
        <a href="flake.htm">Subsurface_Facet_BRDF_Model</a>, &nbsp;
        <a href=
        "sdf.htm">Slope_Distribution_Function</a></p>

        <p><a href="https://doi.org/10.1109/TAP.1968.1139220">D. E. Barrick, "Rough surface scattering based on the
        specular point theory," IEEE Trans. Ant. and Prop.
        <b>AP-16</b> (4), 449-454 (1968).</a></p>

	<h2>Include file:</h2>

          <pre>
#include "<a href="../code/facet.h">facet.h</a>"
</pre>
        <h2>Source code:</h2>

          <pre>
<a href="../code/facet.cpp">facet.cpp</a>
<a href="../code/reg_facet.cpp">reg_facet.cpp</a>
</pre>
        <h2>Definition of public elements:</h2>

          <pre>
class Facet_BRDF_Model
 : public <a href="BRDF_Model.htm">BRDF_Model</a>
{
public:
    virtual double <a href=
"#local_angle">local_angle</a>(double thetai,double thetas,double phis);
    virtual double <a href=
"#local_slope">local_slope</a>(double thetai,double thetas,double phis);
};

typedef <a href=
"modelptr.htm">Model_Ptr</a>&lt;Facet_BRDF_Model&gt; <a href=
"#ptr">Facet_BRDF_Model_Ptr</a>;

</pre>

        <hr>

        <h3><a name="local_angle" id="local_angle">virtual
        double local_angle(double thetai,double thetas,double
        phis)</a></h3>

        <blockquote><p>
          Function that returns the local angle of reflection
          on a specular point for a specific scattering
          geometry.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name=
        "local_slope" id="local_slope">virtual double
        local_slope(double thetai,double thetas,double
        phis)</a></h3>

        <blockquote><p>
          Function that returns the slope of a facet, which
          specularly reflects for a specific scattering geometry.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

	<h3><a name="ptr" id=
        "ptr">typedef Model_Ptr&lt;Facet_BRDF_Model&gt;
        Facet_BRDF_Model_Ptr</a></h3>

        <blockquote><p>
          The typedef <b>Facet_BRDF_Model_Ptr</b> behaves like a
          pointer to an instance of class <b>Facet_BRDF_Model</b>.
          The following statement will query the user for an
          instance of class <b>Facet_BRDF_Model</b>:

          <pre>
Facet_BRDF_Model_Ptr model = Get_Model_Ptr();
</pre>

          <p>The
          next statement will also create an instance of class
          <b>Facet_BRDF_Model</b>:

          <pre>
Facet_BRDF_Model_Ptr model = "Facet_BRDF_Model";
</pre>
          <p>See
          <a href="modelptr.htm">Model_Ptr&lt;model&gt;</a>.
        </blockquote>

        <p><a href="#top"><span class="totop">Top of Page</span></a></p>

<!-- START FOOTER -->
<hr>
<h2>For More Information</h2>

<p>
<a href="https://www.nist.gov/people/thomas-germer">SCATMECH Technical Information and Questions</a><br>
<a href="http://www.nist.gov/pml/div685/index.cfm" target="_top">Sensor Science Division Home Page</a><br>
<a href="mailto:fraser@nist.gov">Sensor Science Division Inquiries</a><br>
<a href="mailto:thomas.germer@nist.gov">Website Comments</a>

<p>
Current SCATMECH version: <a href="./download.htm">7.22 (April 2021)</a><br>
<br>

</td>
</tr>
</table>

</body>
</html>
